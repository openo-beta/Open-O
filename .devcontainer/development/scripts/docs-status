#!/bin/bash

# OpenO EMR - Check Docusaurus Documentation Server Status
# This script checks the status of the Docusaurus development server

set -e

PID_FILE="/tmp/docusaurus.pid"
LOG_FILE="/tmp/docusaurus.log"
DOCS_PORT=3000

echo "📊 OpenO EMR Documentation Server Status"
echo "========================================"

# Check if PID file exists
if [ ! -f "$PID_FILE" ]; then
    echo "Status: ❌ Not running (no PID file)"
    exit 1
fi

# Get the PID
DOCS_PID=$(cat "$PID_FILE")

# Check if process is actually running
if ! kill -0 $DOCS_PID 2>/dev/null; then
    echo "Status: ❌ Not running (process $DOCS_PID not found)"
    rm -f "$PID_FILE"
    exit 1
fi

echo "Status: ✅ Running"
echo "PID: $DOCS_PID"
echo "Port: $DOCS_PORT"
echo "URL: http://localhost:$DOCS_PORT"

# Check if port is actually listening
if command -v netstat >/dev/null 2>&1; then
    if netstat -tlnp 2>/dev/null | grep -q ":$DOCS_PORT "; then
        echo "Port Status: ✅ Listening on $DOCS_PORT"
    else
        echo "Port Status: ⚠️  Process running but port $DOCS_PORT not listening"
    fi
elif command -v ss >/dev/null 2>&1; then
    if ss -tlnp 2>/dev/null | grep -q ":$DOCS_PORT "; then
        echo "Port Status: ✅ Listening on $DOCS_PORT"
    else
        echo "Port Status: ⚠️  Process running but port $DOCS_PORT not listening"
    fi
fi

# Show memory usage if available
if command -v ps >/dev/null 2>&1; then
    MEM_INFO=$(ps -o pid,ppid,rss,vsz,comm -p $DOCS_PID 2>/dev/null | tail -n +2)
    if [ ! -z "$MEM_INFO" ]; then
        echo "Memory: $(echo $MEM_INFO | awk '{print $3}'} KB RSS, $(echo $MEM_INFO | awk '{print $4}'} KB VSZ"
    fi
fi

# Show log file info
if [ -f "$LOG_FILE" ]; then
    LOG_SIZE=$(wc -l < "$LOG_FILE" 2>/dev/null || echo "0")
    LOG_MODIFIED=$(stat -c %y "$LOG_FILE" 2>/dev/null | cut -d. -f1 || echo "unknown")
    echo "Log: $LOG_FILE ($LOG_SIZE lines, modified: $LOG_MODIFIED)"
    
    # Show last few log lines
    echo ""
    echo "📋 Recent log entries:"
    echo "--------------------"
    tail -5 "$LOG_FILE" 2>/dev/null | sed 's/^/   /' || echo "   (no recent logs)"
else
    echo "Log: No log file found"
fi

echo ""
echo "🔧 Management commands:"
echo "   📖 Start: docs-start"
echo "   🛑 Stop:  docs-stop"
echo "   🔄 Logs:  tail -f $LOG_FILE"