//CHECKSTYLE:OFF
/**
 * Copyright (c) 2008-2012 Indivica Inc.
 * <p>
 * This software is made available under the terms of the
 * GNU General Public License, Version 2, 1991 (GPLv2).
 * License details are available via "indivica.ca/gplv2"
 * and "gnu.org/licenses/gpl-2.0.html".
 */

package ca.openosp.openo.olis1;

import ca.openosp.openo.commn.model.Provider;

import ca.openosp.openo.olis1.queries.Query;
import ca.openosp.openo.olis1.segments.DSCSegment;
import ca.openosp.openo.olis1.segments.MSHSegment;
import ca.openosp.openo.olis1.segments.SPRSegment;
import ca.openosp.openo.olis1.segments.ZSHSegment;

/**
 * Represents an OLIS (Ontario Laboratories Information System) HL7 message.
 *
 * This class encapsulates the structure of an OLIS query message, which consists
 * of multiple HL7 segments that together form a complete query request. The message
 * structure follows HL7 v2.5 standards with OLIS-specific customizations.
 *
 * Message structure components:
 * - MSH (Message Header): Contains message metadata and transaction information
 * - ZSH (Custom OLIS Header): Contains provider-specific information
 * - SPR (Stored Procedure Request): Contains the actual query parameters
 * - DSC (Continuation Segment): Optional, used for paginated results
 *
 * The class supports both initial queries and continuation queries for retrieving
 * paginated laboratory results from the OLIS system.
 *
 * @since 2008-01-01
 */
public class OLISMessage {

    /**
     * Message Header segment containing transaction metadata.
     * Includes message type, processing ID, version, and unique transaction identifier.
     */
    private MSHSegment mshSegment;

    /**
     * Custom OLIS header segment containing provider information.
     * Includes provider number, name, and facility details required for authorization.
     */
    private ZSHSegment zshSegment;

    /**
     * Stored Procedure Request segment containing query parameters.
     * Includes the specific query type and associated search criteria.
     */
    private SPRSegment sprSegment;

    /**
     * Optional continuation segment for paginated results.
     * When present, indicates this is a continuation query to retrieve additional results.
     */
    private DSCSegment dscSegment = null;

    /**
     * Default constructor for OLISMessage.
     *
     * Creates an empty message structure. Segments must be initialized
     * separately if using this constructor.
     *
     * @since 2008-01-01
     */
    public OLISMessage() {
        // Empty constructor for manual segment initialization
    }

    /**
     * Constructs an OLIS message for an initial query.
     *
     * Creates all required segments for a new OLIS query request. This constructor
     * is used for the first query in a series, not for continuation queries.
     *
     * @param provider Provider the healthcare provider initiating the query
     * @param query Query the query object containing search parameters and criteria
     * @since 2008-01-01
     */
    public OLISMessage(Provider provider, Query query) {
        mshSegment = new MSHSegment(query.getQueryType());
        zshSegment = new ZSHSegment(provider);
        sprSegment = new SPRSegment(query.getQueryType(), query);
    }

    /**
     * Constructs an OLIS message for a continuation query.
     *
     * Creates all segments including the DSC (continuation) segment for retrieving
     * additional results from a paginated query response. The continuation pointer
     * is provided by OLIS in the previous response when more results are available.
     *
     * @param provider Provider the healthcare provider initiating the query
     * @param query Query the original query object containing search parameters
     * @param continuationPointer String the continuation token from the previous OLIS response
     * @since 2008-01-01
     */
    public OLISMessage(Provider provider, Query query, String continuationPointer) {
        mshSegment = new MSHSegment(query.getQueryType());
        zshSegment = new ZSHSegment(provider);
        sprSegment = new SPRSegment(query.getQueryType(), query);
        dscSegment = new DSCSegment(continuationPointer);
    }

    /**
     * Retrieves the unique transaction identifier for this message.
     *
     * The transaction ID is a UUID generated by the MSH segment that uniquely
     * identifies this query request. It is used for tracking and correlating
     * requests with responses in the OLIS system.
     *
     * @return String the UUID transaction identifier
     * @since 2008-01-01
     */
    public String getTransactionId() {
        return mshSegment.getUuidString();
    }

    /**
     * Generates the complete HL7 message string for OLIS submission.
     *
     * Assembles all message segments into a properly formatted HL7 v2.5 message
     * string. Segments are separated by carriage return characters as per HL7
     * specifications. The DSC segment is only included if this is a continuation query.
     *
     * The message format follows the pattern:
     * MSH|...\r
     * ZSH|...\r
     * SPR|...[\r
     * DSC|...] (if continuation)
     *
     * @return String the complete HL7 message ready for OLIS submission
     * @since 2008-01-01
     */
    public String getOlisHL7String() {
        String output = "";

        // Add required segments
        output += mshSegment.getSegmentHL7String() + "\r";
        output += zshSegment.getSegmentHL7String() + "\r";
        output += sprSegment.getSegmentHL7String();

        // Add optional continuation segment if present
        if (dscSegment != null)
            output += "\r" + dscSegment.getSegmentHL7String();

        return output;
    }

}
