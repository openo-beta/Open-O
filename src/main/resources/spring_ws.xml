<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:cxf="http://cxf.apache.org/core"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
            http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
            http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
            http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd">

    <!-- =========================================================
         Component scans
         ========================================================= -->
    <!-- NEW: pick up your OAuth1 controllers + helpers -->
    <context:component-scan base-package="ca.openosp.openo.webserv.oauth"/>
    <!-- Provider + legacy OAuth session merger lives here -->
    <context:component-scan base-package="ca.openosp.openo.login"/>

    <!-- Keep existing REST resources (cookie-auth) and SOAP WS -->
    <context:component-scan base-package="ca.openosp.openo.webserv.rest"/>
    <context:component-scan base-package="ca.openosp.openo.webserv.rest.util"/>
    <context:component-scan base-package="ca.openosp.openo.webserv.rest.conversion"/>
    <context:component-scan base-package="ca.openosp.openo.webserv">
        <context:exclude-filter type="assignable" expression="ca.openosp.openo.webserv.SystemInfoWs"/>
    </context:component-scan>

    <aop:aspectj-autoproxy/>

    <!-- =========================================================
         CXF Bus + SOAP endpoints (unchanged)
         ========================================================= -->
    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>

    <bean id="abstractLoggingInterceptor" abstract="true">
        <property name="prettyLogging" value="true"/>
    </bean>
    <bean id="loggingInInterceptor" class="org.apache.cxf.interceptor.LoggingInInterceptor" parent="abstractLoggingInterceptor">
        <property name="limit" value="1024000"/>
    </bean>
    <bean id="loggingOutInterceptor" class="org.apache.cxf.interceptor.LoggingOutInterceptor" parent="abstractLoggingInterceptor"/>

    <cxf:bus>
		<cxf:properties>
			<entry key="ws-security.ut.validator" value-ref="oscarUsernameTokenValidator" />
		</cxf:properties>
		
		<!-- logging interceptors
		<cxf:outInterceptors>
			<ref bean="loggingOutInterceptor" />
		</cxf:outInterceptors> 
		<cxf:inInterceptors>
			<ref bean="loggingInInterceptor" />
		</cxf:inInterceptors>
		
		<cxf:outFaultInterceptors>
			<ref bean="loggingOutInterceptor" />
		</cxf:outFaultInterceptors>
		<cxf:inFaultInterceptors>
			<ref bean="loggingInInterceptor" />
		</cxf:inFaultInterceptors>
		-->
		 
    </cxf:bus>

	<!-- Managed WS Beans -->
	<!-- The WS classes are turned into spring beans to allow autowiring etc, then the endpoints reference them -->
 	<context:component-scan base-package="ca.openosp.openo.webserv"/>
	
	<bean id="authenticationInWSS4JInterceptor" class="ca.openosp.openo.webserv.AuthenticationInWSS4JInterceptor" autowire="byType" />
	<bean id="oscarUsernameTokenValidator" class="ca.openosp.openo.webserv.OscarUsernameTokenValidator" autowire="byType" />

	<!-- www service endpoints -->
	<jaxws:endpoint implementor="#systemInfoWs" address="/SystemInfoService"/>		
	<jaxws:endpoint implementor="#loginWs" address="/LoginService" />	
	
	<jaxws:endpoint implementor="#scheduleWs" address="/ScheduleService">
		<jaxws:inInterceptors>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>	

	<jaxws:endpoint implementor="#bookingWs" address="/BookingService">
		<jaxws:inInterceptors>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>	
	
	<jaxws:endpoint implementor="#providerWs" address="/ProviderService" >
		<jaxws:inInterceptors>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>	
	
	<jaxws:endpoint implementor="#demographicWs" address="/DemographicService" >
		<jaxws:inInterceptors>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>
		
	<jaxws:endpoint implementor="#facilityWs" address="/FacilityService" >
		<jaxws:inInterceptors>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>	
  
	<jaxws:endpoint implementor="#programWs" address="/ProgramService" >
		<jaxws:inInterceptors>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>	
     	
	<jaxws:endpoint implementor="#allergyWs" address="/AllergyService" >
		<jaxws:inInterceptors>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>	
     	
	<jaxws:endpoint implementor="#preventionWs" address="/PreventionService" >
		<jaxws:inInterceptors>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>	

	<jaxws:endpoint implementor="#measurementWs" address="/MeasurementService" >
		<jaxws:inInterceptors>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>	

	<jaxws:endpoint implementor="#documentWs" address="/DocumentService" >
		<jaxws:inInterceptors>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>	

	<jaxws:endpoint implementor="#prescriptionWs" address="/PrescriptionService" >
		<jaxws:inInterceptors>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>	

	<jaxws:endpoint implementor="#labUploadWs" address="/LabUploadService" >
		<jaxws:inInterceptors>
			<ref bean="authenticationInWSS4JInterceptor"/>
		</jaxws:inInterceptors>
	</jaxws:endpoint>	
	
	<context:component-scan base-package="ca.openosp.openo.webserv.rest"/>
	<context:component-scan base-package="ca.openosp.openo.webserv.rest.util"/>
	<context:component-scan base-package="ca.openosp.openo.webserv.rest.conversion"/>
	<context:component-scan base-package="ca.openosp.openo.webserv.oauth.util"/>

	<aop:aspectj-autoproxy/>
	
	<!-- RESTful www service  -->
	<jaxrs:server address="/rs" id="jaxrServer">

		<jaxrs:inInterceptors>
			<bean name="authInInterceptor"
				class="ca.openosp.openo.webserv.rest.util.AuthenticationInInterceptor" />
		</jaxrs:inInterceptors>
		
		<jaxrs:providers>
		    <ref bean="jaxb"/>
			<ref bean="jsonProvider"/>
			<bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
		</jaxrs:providers>
		
	

		<jaxrs:features>
			<cxf:logging />
		</jaxrs:features>

		<jaxrs:serviceBeans>
			<bean class="ca.openosp.openo.webserv.csrf.CsrfTokenService" autowire="byName" />
			<bean class="ca.openosp.openo.webserv.rest.PharmacyService" autowire="byName"/>
			<bean class="ca.openosp.openo.webserv.rest.DemographicService" autowire="byName"/>
			<bean class="ca.openosp.openo.webserv.rest.ScheduleService" autowire="byName"/>
			<bean class="ca.openosp.openo.webserv.rest.DemographicMergeService" autowire="byName"/>
			<bean class="ca.openosp.openo.webserv.rest.MessagingService" autowire="byName"/>
			<bean class="ca.openosp.openo.webserv.rest.InboxService" autowire="byName"/>
			<bean class="ca.openosp.openo.webserv.rest.TicklerWebService" autowire="byName"/>
            <bean class="ca.openosp.openo.webserv.rest.RxWebService" autowire="byName"/>
            <bean class="ca.openosp.openo.webserv.rest.RxLookupService" autowire="byName"/>
			<bean class="ca.openosp.openo.webserv.rest.ProviderService" autowire="byName"/>
			<bean class="ca.openosp.openo.webserv.rest.PatientDetailStatusService" autowire="byName"/>
			<bean class="ca.openosp.openo.webserv.rest.PersonaService" autowire="byName"/>
			<bean class="ca.openosp.openo.webserv.rest.FormsService" autowire="byName"/>
			<bean class="ca.openosp.openo.webserv.rest.OscarJobService" autowire="byName"/>
			<bean class="ca.openosp.openo.webserv.rest.NotesService" autowire="byName" />
			<bean class="ca.openosp.openo.webserv.rest.ProductDispensingService" autowire="byName"/>
			<bean class="ca.openosp.openo.webserv.rest.RecordUxService" autowire="byName" />
			<bean class="ca.openosp.openo.webserv.rest.ReportingService" autowire="byName" />
			<bean class="ca.openosp.openo.webserv.rest.BillingService" autowire="byName" />
			<bean class="ca.openosp.openo.webserv.rest.StatusService" autowire="byName" />
			<bean class="ca.openosp.openo.webserv.rest.ProgramService" autowire="byName" />
			<bean class="ca.openosp.openo.webserv.rest.ConsultationWebService" autowire="byName" />
			<bean class="ca.openosp.openo.webserv.rest.AppService" autowire="byName" />
			<bean class="ca.openosp.openo.webserv.rest.AllergyService" autowire="byName" />
			<bean class="ca.openosp.openo.webserv.rest.PreventionService" autowire="byName" />
			<bean class="ca.openosp.openo.webserv.rest.ReportByTemplateService" autowire="byName" />
			<bean class="ca.openosp.openo.webserv.rest.ResourceService" autowire="byName" />
			<bean class="ca.openosp.openo.webserv.rest.DiseaseRegistryService" autowire="byName" />
<!--			<bean class="org.oscarehr.webservbserv.rest.SystemInfoService" autowire="byName" /> -->
			<bean class="ca.openosp.openo.webserv.rest.LabService" autowire="byName" />
			<bean class="ca.openosp.openo.webserv.rest.MeasurementService" autowire="byName" />
			<bean class="ca.openosp.openo.webserv.rest.ConsentService" autowire="byName" />
		</jaxrs:serviceBeans>

		<jaxrs:extensionMappings>
			<entry key="xml" value="application/xml" />
			<entry key="json" value="application/json" />
		</jaxrs:extensionMappings>
	</jaxrs:server>
	
	<bean id="jaxb" class="org.apache.cxf.jaxrs.provider.JAXBElementProvider">
      <property name="singleJaxbContext" value="true"/>
 
      <property name="extraClass">
         <list>
           <value>ca.openosp.openo.webserv.transfer_objects.ProviderTransfer</value>
         </list>
      </property>

	</bean>

    <util:list id="jsonKeys">
        <value>tickler</value>
        <value>ticklerComments</value>
        <value>ticklerUpdates</value>
        <value>content</value>
        <value>post</value>
    </util:list>

    <!-- OAuth provider alias - OAuth beans are defined in applicationContextREST.xml -->
    <alias name="oscarOAuthDataProvider" alias="oauthProvider"/>


	<!-- 
		Switched from Jettison (org.codehaus.jettison) to FasterXML Jackson 
		for JSON handling in CXF JAX-RS providers. 
		This ensures better compatibility and consistency of REST API 
		request/response serialization and deserialization. 
		Also excluded cxf-rt-rs-extension-providers to avoid Jettison being pulled in transitively.
	-->
    <!-- <bean id="jsonProvider" class="org.apache.cxf.jaxrs.provider.json.JSONProvider">
        <property name="dropRootElement" value="true"/>
        <property name="serializeAsArray" value="true"/>
        <property name="arrayKeys" ref="jsonKeys"/>
        <property name="dropCollectionWrapperElement" value="true"/>
    </bean> -->

    <!-- =========================================================
         View resolver for OAuth authorize JSPs (Spring MVC)
         Adjust prefix/suffix to match your project.
         ========================================================= -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order"  value="2"/>
    </bean>

</beans>
