# GitHub Workflow: Check Open-O
#
# Description:
# This workflow automates the build, testing, and code quality checks for 
# the Open-O Maven project. It ensures the project builds successfully and adheres 
# to coding standards defined by Checkstyle.
#
# Usage:
# - Triggered by pull requests targeting the following branches:
#   - main
#   - develop/alpaca
#   - develop/bullfrog
#   - develop/coyote
#   - develop/dolphin
#   - develop/dogfish
#
# Key Jobs:
# - build: 
#   - Checks out the source code, builds Docker containers, generates Make files,
#     builds the project, and runs unit tests while compiling JSP files.
# - checkstyle:
#   - Checks out the source code, builds Docker containers, and runs the 
#     Maven Checkstyle plugin to enforce code style guidelines.
#
# License:
# This GitHub Workflow file is part of the Open-O project and is subject 
# to the licensing terms outlined in the repository's LICENSE file.
#
# Last Updated:
# January 31, 2025

name: Check Open-O

on:
  pull_request:
    branches:
      - main
      - develop/alpaca
      - develop/bullfrog
      - develop/coyote
      - develop/dolphin
      - develop/dogfish

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /home/runner/.docker
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Docker containers
        uses: hoverkraft-tech/compose-action@v2.1.0
        with:
          compose-file: ".devcontainer/docker-compose.yml"

      # Setup test configuration file from template
      - name: Setup test configuration
        run: |
          docker exec openo-tomcat-dev bash -c "
            config_dir='/workspace/src/test/resources'
            properties_file=\"\${config_dir}/over_ride_config.properties\"
            template_file=\"\${properties_file}.template\"

            if [ -f \"\$template_file\" ] && [ ! -f \"\$properties_file\" ]; then
              echo 'Setting up over_ride_config.properties...'
              cp \"\$template_file\" \"\$properties_file\"
            fi
          "

      # Run isolated test phases matching 'make install --run-tests' pattern

      - name: Phase 1 - Build with modern profile
        run: |
          docker exec openo-tomcat-dev bash -c "
            echo '========================================='
            echo 'Phase 1: Modern Tests Workflow'
            echo '========================================='
            mvn clean -DskipModernTests=true -DskipLegacyTests=true -T 1C package war:exploded -Pmodern-tests -Ddependency.lock.filename=dependencies-lock-modern.json
          "

      - name: Phase 1 - Run modern tests
        run: |
          docker exec openo-tomcat-dev bash -c "
            echo 'Running modern tests...'
            mvn test -Pmodern-tests -DskipLegacyTests=true -Ddependency.lock.filename=dependencies-lock-modern.json
          "

      - name: Cleanup between phases
        run: |
          docker exec openo-tomcat-dev bash -c "
            echo 'Cleaning up between test phases...'
            rm -rf /usr/local/tomcat/webapps/oscar
            mvn clean -q
          "

      - name: Phase 2 - Build without modern profile
        run: |
          docker exec openo-tomcat-dev bash -c "
            echo '========================================='
            echo 'Phase 2: Legacy Tests Workflow'
            echo '========================================='
            mvn clean -DskipModernTests=true -DskipLegacyTests=true -T 1C package war:exploded
          "

      - name: Phase 2 - Run legacy tests
        run: |
          docker exec openo-tomcat-dev bash -c "
            echo 'Running legacy tests...'
            mvn test -DskipModernTests=true
          "

  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /home/runner/.docker
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Docker containers
        uses: hoverkraft-tech/compose-action@v2.1.0
        with:
          compose-file: ".devcontainer/docker-compose.yml"
          
      - name: Run Maven Checkstyle plugin
        run: docker exec openo-tomcat-dev mvn checkstyle:checkstyle
