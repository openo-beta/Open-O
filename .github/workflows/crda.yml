name: CRDA Security Scan

on:
  pull_request:
    types: [opened, synchronize, reopened]

# Fix the 403 permission error
permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  crda-maven-scan:
    name: CRDA Maven Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout PR code
        uses: actions/checkout@v3
        
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'  # Change to 8, 11, 17, or 21 based on your project
          
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
      - name: Install Maven dependencies
        run: mvn dependency:resolve
        
      - name: Run CRDA Analysis
        uses: redhat-actions/crda@v1
        with:
          # CRITICAL: Explicitly specify pom.xml for Maven
          manifest_file: pom.xml
          manifest_directory: ./  # Or the path to where your pom.xml is located
          
          # Optional: Specify how to install dependencies
          analysis_deps_install_cmd: "mvn clean install -DskipTests"
          
          # Your Snyk token
          snyk_token: ${{ secrets.SNYK_TOKEN }}
          
          # When to fail the build
          fail_on: high  # Options: never, low, medium, high, critical
          
          # Upload SARIF results to GitHub Security tab
          upload_sarif: true
